From c795ec0f113ec941493143b23083e3c7b3fed7d4 Mon Sep 17 00:00:00 2001
From: LordPsyan <lordpsyan@gmail.com>
Date: Tue, 11 Feb 2020 11:49:57 -0600
Subject: [PATCH] 2020_01_31-Cheats-FastFishing-AttackAndRespawnSpeed

---
 .../game/Entities/Creature/Creature.cpp       |  2 +-
 src/server/game/Entities/Player/Player.cpp    | 14 +++-
 src/server/game/Entities/Unit/Unit.cpp        |  9 ++-
 src/server/game/Spells/SpellEffects.cpp       |  3 +
 src/server/game/Spells/SpellInfo.cpp          |  6 +-
 src/server/game/World/World.cpp               |  8 +-
 src/server/game/World/World.h                 | 11 ++-
 src/server/worldserver/worldserver.conf.dist  | 74 +++++++++++++++++++
 8 files changed, 115 insertions(+), 12 deletions(-)

diff --git a/src/server/game/Entities/Creature/Creature.cpp b/src/server/game/Entities/Creature/Creature.cpp
index 9b90fe95b3..76830c5e41 100644
--- a/src/server/game/Entities/Creature/Creature.cpp
+++ b/src/server/game/Entities/Creature/Creature.cpp
@@ -1933,7 +1933,7 @@ void Creature::setDeathState(DeathState s)
             if (IsDungeonBoss() && !m_respawnDelay)
                 m_respawnTime = std::numeric_limits<time_t>::max(); // never respawn in this instance
             else
-                m_respawnTime = GameTime::GetGameTime() + respawnDelay + m_corpseDelay;
+                m_respawnTime = GameTime::GetGameTime() + (respawnDelay / sWorld->getFloatConfig(CONFIG_RESPAWNSPEED)) + m_corpseDelay;
         }
         else
         {
diff --git a/src/server/game/Entities/Player/Player.cpp b/src/server/game/Entities/Player/Player.cpp
index 30444f2f2f..572ca705fe 100644
--- a/src/server/game/Entities/Player/Player.cpp
+++ b/src/server/game/Entities/Player/Player.cpp
@@ -1164,7 +1164,10 @@ void Player::Update(uint32 p_time)
 
                     // do attack
                     AttackerStateUpdate(victim, BASE_ATTACK);
-                    resetAttackTimer(BASE_ATTACK);
+                    if (sWorld->getBoolConfig(CONFIG_HURT_IN_REAL_TIME))
+                        AttackStop();
+                    else
+                        resetAttackTimer(BASE_ATTACK);
                 }
             }
 
@@ -22743,10 +22746,13 @@ void Player::SendInitialPacketsBeforeAddToMap()
 
     SendEquipmentSetList();
 
+    float speedrate = sWorld->getFloatConfig(CONFIG_SPEED_GAME);
+    uint32 speedtime = ((GameTime::GetGameTime() - GameTime::GetUptime()) + (GameTime::GetUptime() * speedrate));
+
     data.Initialize(SMSG_LOGIN_SETTIMESPEED, 4 + 4 + 4);
-    data.AppendPackedTime(GameTime::GetGameTime());
-    data << float(0.01666667f);                             // game speed
-    data << uint32(0);                                      // added in 3.1.2
+    data.AppendPackedTime(speedtime);
+    data << float(0.01666667f) * speedrate; // game speed
+    data << uint32(0); // added in 3.1.2
     SendDirectMessage(&data);
 
     GetReputationMgr().SendForceReactions();                // SMSG_SET_FORCED_REACTIONS
diff --git a/src/server/game/Entities/Unit/Unit.cpp b/src/server/game/Entities/Unit/Unit.cpp
index 7640d6ece0..2a7db8f222 100644
--- a/src/server/game/Entities/Unit/Unit.cpp
+++ b/src/server/game/Entities/Unit/Unit.cpp
@@ -546,7 +546,14 @@ void Unit::DisableSpline()
 
 void Unit::resetAttackTimer(WeaponAttackType type)
 {
-    m_attackTimer[type] = uint32(GetAttackTime(type) * m_modAttackSpeedPct[type]);
+    if (GetTypeId() == TYPEID_PLAYER || (ToCreature()->GetOwner() && ToCreature()->GetOwner()->GetTypeId() == TYPEID_PLAYER))
+    {
+        m_attackTimer[type] = uint32(GetAttackTime(type) * m_modAttackSpeedPct[type] / sWorld->getFloatConfig(CONFIG_ATTACKSPEED_PLAYER));
+    }
+    else
+    {
+        m_attackTimer[type] = uint32(GetAttackTime(type) * m_modAttackSpeedPct[type] / sWorld->getFloatConfig(CONFIG_ATTACKSPEED_ALL));
+    }
 }
 
 bool Unit::IsWithinCombatRange(Unit const* obj, float dist2compare) const
diff --git a/src/server/game/Spells/SpellEffects.cpp b/src/server/game/Spells/SpellEffects.cpp
index 25bd7aa0d6..ed9bbe6746 100644
--- a/src/server/game/Spells/SpellEffects.cpp
+++ b/src/server/game/Spells/SpellEffects.cpp
@@ -4695,6 +4695,9 @@ void Spell::EffectTransmitted(SpellEffIndex effIndex)
                 case 2: lastSec = 13; break;
             }
 
+            if (sWorld->getBoolConfig(CONFIG_FAST_FISHING))
+                lastSec = 17;
+
             // Duration of the fishing bobber can't be higher than the Fishing channeling duration
             duration = std::min(duration, duration - lastSec*IN_MILLISECONDS + FISHING_BOBBER_READY_TIME*IN_MILLISECONDS);
             break;
diff --git a/src/server/game/Spells/SpellInfo.cpp b/src/server/game/Spells/SpellInfo.cpp
index 3a0e858cd2..a1c5b3ea94 100644
--- a/src/server/game/Spells/SpellInfo.cpp
+++ b/src/server/game/Spells/SpellInfo.cpp
@@ -30,6 +30,7 @@
 #include "SpellAuraEffects.h"
 #include "SpellMgr.h"
 #include "Vehicle.h"
+#include "World.h"
 
 uint32 GetTargetFlagMask(SpellTargetObjectTypes objType)
 {
@@ -3098,7 +3099,10 @@ uint32 SpellInfo::CalcCastTime(Spell* spell /*= nullptr*/) const
     if (HasAttribute(SPELL_ATTR0_REQ_AMMO) && (!IsAutoRepeatRangedSpell()))
         castTime += 500;
 
-    return (castTime > 0) ? uint32(castTime) : 0;
+    if (!sWorld->getBoolConfig(CONFIG_NO_CAST_TIME))
+        return (castTime > 0) ? uint32(castTime) : 0;
+    else
+        return 0;
 }
 
 uint32 SpellInfo::GetMaxTicks() const
diff --git a/src/server/game/World/World.cpp b/src/server/game/World/World.cpp
index 86c38d6aa4..b5c25754fe 100644
--- a/src/server/game/World/World.cpp
+++ b/src/server/game/World/World.cpp
@@ -1566,7 +1566,13 @@ void World::LoadConfigSettings(bool reload)
     // Prepatch by LordPsyan
     // 41
     // 42
-    // 43
+    m_float_configs[CONFIG_SPEED_GAME] = sConfigMgr->GetFloatDefault("Custom.SpeedGame", 1.0f);
+    m_bool_configs[CONFIG_NO_CAST_TIME] = sConfigMgr->GetBoolDefault("Custom.NoCastTime", false);
+    m_bool_configs[CONFIG_HURT_IN_REAL_TIME] = sConfigMgr->GetBoolDefault("Custom.HurtInRealTime", false);
+    m_bool_configs[CONFIG_FAST_FISHING] = sConfigMgr->GetBoolDefault("Custom.FastFishing", false);
+    m_float_configs[CONFIG_ATTACKSPEED_PLAYER] = sConfigMgr->GetFloatDefault("Custom.AttackSpeedForPlayer", 1.0f);
+    m_float_configs[CONFIG_ATTACKSPEED_ALL] = sConfigMgr->GetFloatDefault("Custom.AttackSpeedForMobs", 1.0f);
+    m_float_configs[CONFIG_RESPAWNSPEED] = sConfigMgr->GetFloatDefault("Custom.RespawnSpeed", 1.0f);
     // 44
     // 45
     // 46
diff --git a/src/server/game/World/World.h b/src/server/game/World/World.h
index 975cd0d06f..6927cd5f74 100644
--- a/src/server/game/World/World.h
+++ b/src/server/game/World/World.h
@@ -163,7 +163,9 @@ enum WorldBoolConfigs
     // Prepatch by LordPsyan
     // 01
     // 02
-    // 03
+    CONFIG_NO_CAST_TIME,
+    CONFIG_HURT_IN_REAL_TIME,
+    CONFIG_FAST_FISHING,
     // 04
     // 05
     // 06
@@ -249,15 +251,16 @@ enum WorldFloatConfigs
     // Prepatch by LordPsyan
     // 41
     // 42
-    // 43
+    CONFIG_SPEED_GAME,
     // 44
     // 45
     // 46
-    // 47
+    CONFIG_ATTACKSPEED_PLAYER,
+    CONFIG_ATTACKSPEED_ALL,
     // 48
     // 49
     // 50
-    // 51
+    CONFIG_RESPAWNSPEED,
     // 52
     // 53
     // 54
diff --git a/src/server/worldserver/worldserver.conf.dist b/src/server/worldserver/worldserver.conf.dist
index afa4fcccce..c53a6dc20f 100644
--- a/src/server/worldserver/worldserver.conf.dist
+++ b/src/server/worldserver/worldserver.conf.dist
@@ -4096,6 +4096,80 @@ Metric.OverallStatusInterval = 1
 #
 ###################################################################################################
 
+###################################################################################################
+#
+# Custom.SpeedGame
+# Set it to a number upper than 1 to speed up realm timer
+# Default : 1 (Real Time)
+# Example : 60 to force 1scde (real time) = 1 minute (realm timer)
+#
+
+Custom.SpeedGame = 1
+
+#
+# Custom.NoCastTime
+# Set it to 1 to disable cast time
+# Default : 0 (Cast Time Enable)
+#
+
+Custom.NoCastTime = 0
+
+#
+# Custom.HurtInRealTime
+# Set it to 1 to disable autohurt with weapon
+# Default : 0 (Autohurt Enable)
+#
+
+Custom.HurtInRealTime = 0
+
+#
+###################################################################################################
+
+###################################################################################################
+#
+# Custom.FastFishing
+# Set it to 1 to make fishing a lot faster!
+# Default : 0 (Fishing is normal)
+#
+
+Custom.FastFishing = 0
+
+#
+###################################################################################################
+
+###################################################################################################
+#
+# Custom.RespawnSpeed
+# Set it to a number upper than 1 to speed up the respawn of mobs (and lower than 1 to slow down).
+# Default : 1.0 (Normal speed)
+#
+
+Custom.RespawnSpeed = 1.0
+
+#
+###################################################################################################
+
+#
+# Custom.AttackSpeedForPlayer
+# Set it to a number upper than 1 to speed up the attack of the player
+# Default : 1.0 (Normal speed)
+# Example : 2.0 (Player attack speed is 200% faster)
+#
+
+Custom.AttackSpeedForPlayer = 1.0
+
+#
+# Custom.AttackSpeedForMobs
+# Set it to a number upper than 1 to speed up the attack of the mobs
+# Default : 1.0 (Normal speed)
+# Example : 0.5 (Mobs attack speed is 50% slower)
+#
+
+Custom.AttackSpeedForMobs = 1.0
+
+#
+###################################################################################################
+
 #
 # Prepatch by LordPsyan.
 # See http://www.realmsofwarcraft.com/bb for forums and information.
-- 
2.20.1

